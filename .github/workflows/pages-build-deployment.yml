name: pages-build-deployment

on:
  schedule:
    - cron: '01 00 1 1 *'
  push:
    branches: ["main"]
  workflow_dispatch:

env:
  JEKYLL_ENV: "production"
  JEKYLL_DESTINATION: "./_site"
  RUBY_VERSION: 2.7.5

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      # - name: Get yarn cache directory path
      #   id: yarn-cache-dir-path
      #   run: echo "::set-output name=dir::$(yarn cache dir || yarn config get cacheFolder)"
      # - uses: actions/cache@v3
      #   id: yarn-cache
      #   with:
      #     path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
      #     key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
      #     restore-keys: |
      #       ${{ runner.os }}-yarn-
      - uses: actions/setup-node@v3
        with:
          node-version: 'lts/*'
          cache: 'yarn'
      - 
        # if: ${{ steps.yarn-cache.outputs.cache-hit != 'true' }}
        run: yarn install --frozen-lockfile

      - uses: actions/cache@v3
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gems-
      - uses: ruby/setup-ruby@v1
        if: ${{ github.actor != 'nektos/act' }}
        with:
          ruby-version: ${{ env.RUBY_VERSION }}
          bundler-cache: true
      - uses: ruby/setup-ruby@v1
        if: ${{ github.actor == 'nektos/act' }}
        with:
          ruby-version: ${{ env.RUBY_VERSION }}
          bundler-cache: false
      - if: ${{ github.actor == 'nektos/act' }}
        run: bundle install
      - name: Setup Pages
        if: ${{ github.actor != 'nektos/act' }}
        id: pages
        uses: actions/configure-pages@v2
      - name: build jekyll development
        run: bundle exec rake
        env: 
          JEKYLL_ENV: development
      - run: rm -rf ${{ env.JEKYLL_DESTINATION }} .jekyll-cache
      - name: build jekyll production
        run: bundle exec rake
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          JEKYLL_GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OCTOKIT_ACCESS_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      # - name: build jekyll production
      #   run: bundle exec jekyll build --trace --verbose --destination ${{ env.JEKYLL_DESTINATION }}
      #   env: 
      #     JEKYLL_ENV: ${{ env.JEKYLL_ENV }}
      #     JEKYLL_GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #     OCTOKIT_ACCESS_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      # - name: post build
      #   run: bundle exec rake post_build
      - name: Upload GitHub Pages artifact
        if: ${{ success() && github.actor != 'nektos/act' }}
        uses: actions/upload-pages-artifact@v1.0.4
        with:
          path: ${{ env.JEKYLL_DESTINATION }}

  deploy:
    needs: build
    if: ${{ success() }}
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1
